<div class="content-wrapper">
    <section class="content-header">
        <h1>
            System 
            <small>user</small>
        </h1>
        <ol class="breadcrumb">
            <li><a href="#"><i class="fa fa-dashboard"></i>Dashboard</a></li>
            <li><a href="#">System</a></li>
            <li class="active">User</li>
        </ol>
    </section>
    <section class="content">

        <div class="row">
            <div class="col-xs-12">
                <div class="box">
                    <div class="box-body">
                        <div class="form-inline">
                            <div class="form-group">
                                <span class="input-group-addon form-control">Time Span</span>
                            </div>
                            <div class="form-group">
                                <input type="text" v-model="datemin" ref="datemin" id="datemin" class="form-control">
                            </div>
                            <div class="form-group">
                                <input type="text" v-model="datemax" ref="datemax" id="datemax" class="form-control">
                            </div>
                            <div class="form-group">
                                <button name="search" v-on:click="searchL" type="submit" class="btn btn-success form-control"><i class="fa fa-search"></i>Search</button>
                            </div>
                        </div>

                        <div id="toolbar" class="btn-group">
                            <button id="btn_add" v-on:click="showL" type="button" class="btn btn-default">
                                <span class="glyphicon glyphicon-plus" aria-hidden="true"></span>Add
                            </button>
                            <button id="btn_edit" v-on:click="editL" type="button" class="btn btn-default">
                                <span class="glyphicon glyphicon-pencil" aria-hidden="true"></span>Modify
                            </button>
                            <button id="btn_delete" v-on:click="deleteL" type="button" class="btn btn-default">
                                <span class="glyphicon glyphicon-remove" aria-hidden="true"></span>Delete
                            </button>
                            <button id="btn_delete" v-on:click="enableL" type="button" class="btn btn-default">
                                <span class="glyphicon glyphicon-off" aria-hidden="true"></span>Enable
                            </button>
                        </div>
                        <table id="bootstraptable" class="table table-bordered text-nowrap table-hover"></table>
                    </div>
                </div>
            </div>
        </div>
        @*<div class="table-responsive">
                <table id="bootstraptable" class="table text-nowrap"></table>
            </div>*@
    </section>
</div>

@section scripts{
    <script type="text/javascript">

        var app = new Vue({
            el: '#app',
            data: {
                UserNickname: '',
                datemin: '',
                datemax: ''
            },
            //beforeCreate: function () {
            //    this.$nextTick(function () {
            //        this.load();
            //    });
            //},
            //created: function () {
            //    this.$nextTick(function () {
            //        this.load();
            //    });
            //},
            mounted: function () {
                var _self = this;
                _self.$nextTick(function () {
                    _self.$refs.User.parentNode.parentNode.classList.add("active");
                    _self.$refs.User.classList.add("active");

                    _self.datemin = _self.getCurrentMonthFirst();
                    _self.datemax = _self.getCurrentMonthLast();
                    $('#datemin').datetimepicker({
                        format: 'yyyy-mm-dd',
                        minView: 2,
                        autoclose: true,
                        language: "en-us"
                    });
                    $('#datemax').datetimepicker({
                        format: 'yyyy-mm-dd',
                        minView: 2,
                        autoclose: true,
                        language: "en-us"
                    });
                    setTimeout(function () {
                        _self.loadL();
                        $("div[class='pull-right search']")[0].children[0].setAttribute("placeholder", "Name or Nickname");
                    }, 500);
                    //$('#datemin')
                    //    .datetimepicker()
                    //    .on('changeDate', function (ev) {
                    //        this.datemin = $('#datemin').val();
                    //    });
                });
            },
            methods: {
                loadL: function () {
                    _self = this;
                    var obj = [{
                        checkbox: true,             //是否显示复选框
                        visible: true
                    },
                    {
                        field: 'UserId',
                        title: 'Id',
                        visible: false
                    }, {
                        field: 'UserName',
                        title: 'Name',
                        align: 'center',
                        sortable: true
                    }, {
                        field: 'UserNickname',
                        title: 'Nickname',
                        align: 'center',
                        sortable: true
                    }, {
                        field: 'DeptName',
                        align: 'center',
                        title: 'Department'
                    }, {
                        field: 'RoleName',
                        align: 'center',
                        title: 'Role'
                    }, {
                        field: 'Tel',
                        align: 'center',
                        title: 'Tel'
                    }, {
                        field: 'Email',
                        align: 'center',
                        title: 'E-Mail'

                    }, {
                        field: 'Sex',
                        title: 'Gender',
                        align: 'center',
                        formatter: function (value, row, index) {
                            if (value === 1) {
                                return "Male";
                            } else {
                                return "Female";
                            }
                        }
                    }, {
                        field: 'IsEabled',
                        title: 'Enable',
                        align: 'center',
                        formatter: function (value, row, index) {
                            if (value === 1) {
                                return '<span class="label label-success radius">Enable</span>';
                            } else {
                                return '<span class="label label-danger radius">Disable</span>';
                            }
                        }
                    }, {
                        field: 'Remark',
                        align: 'center',
                        title: 'Remark'
                    }, {
                        field: 'CName',
                        title: 'CreateBy',
                        align: 'center',
                        sortable: true
                    }, {
                        field: 'CreateDate',
                        align: 'center',
                        title: 'Createtime',
                        sortable: true,
                        formatter: function (value, row, index) {
                            return _self.jsonDateFormat(value);
                        }
                    }, {
                        field: 'UName',
                        align: 'center',
                        title: 'ModifiedBy',
                        sortable: true
                    }, {
                        field: 'ModifiedDate',
                        title: 'Modifytime',
                        align: 'center',
                        sortable: true,
                        formatter: function (value, row, index) {
                            return _self.jsonDateFormat(value);
                        }
                    }];
                    yui.table("bootstraptable", "/User/List", obj, "POST", "UserId");
                },
                showL: function () {
                    yui.layershow("Add user", "/User/Add", 500, 500);
                },
                searchL: function () {
                    $("#bootstraptable").bootstrapTable('refresh');
                },
                editL: function () {
                    var arr = $("#bootstraptable").bootstrapTable('getSelections');
                    if (arr.length > 0) {
                        var index = layer.confirm("Confirm to Modify?", { btn: ["Confirm", "Cancel"] }, function () {
                            layer.close(index);
                            var id = arr[0].UserId;
                            yui.layershow("Modify user", "/User/Add?id=" + id, 500, 500);
                        }, function () {

                        });
                    } else {
                        layer.alert("Please select one item", { icoon: 3, skin: "layer-ext-moon" });
                    }
                },
                enableL: function () {
                    var _self = this;
                    var arr = $("#bootstraptable").bootstrapTable('getSelections');
                    if (arr.length > 0) {
                        var value = arr[0].IsEabled;
                        var content = "Enable";
                        if (value === 1) {
                            content = "Disable";
                        }
                        var index = layer.confirm("Confirm" + content + "?", { btn: ["Confirm", "Cancel"] }, function () {
                            var id = arr[0].UserId;
                            axios.get('/User/Enable?id=' + id + "&type=" + value)
                                .then(function (response) {
                                    if (response.data.Item1) {
                                        layer.msg(response.data.Item2 || errorMsg, { icon: 1 });
                                        _self.searchL();
                                    } else {
                                        layer.msg(response.data.Item2 || errorMsg, { icon: 5 });
                                    }
                                })
                                .catch(function (error) {
                                    layer.msg(error.message, { icon: 5 });
                                });
                            layer.close(index);
                        });
                    } else {
                        layer.alert("Please select one item", { icoon: 3, skin: "layer-ext-moon" });
                    }
                },
                deleteL: function () {
                    _self = this;
                    var arr = $("#bootstraptable").bootstrapTable('getSelections');
                    if (arr.length > 0) {
                        var index = layer.confirm("Confirm to delete?", { btn: ["Confirm", "Cancel"] }, function () {
                            var id = arr[0].UserId;
                            yui.$axiosget('/User/Delete?id=' + id)
                                .then(function (response) {
                                    if (response.data.Item1) {
                                        layer.msg(response.data.Item2 || errorMsg, { icon: 1 });
                                        _self.searchL();
                                    } else {
                                        layer.msg(response.data.Item2 || errorMsg, { icon: 5 });
                                    }
                                })
                                .catch(function (error) {
                                    layer.msg(error.message, { icon: 5 });
                                });
                            layer.close(index);
                        });
                    } else {
                        layer.alert("Please select one item", { icoon: 3, skin: "layer-ext-moon" });
                    }
                }
            }
        });
    </script>
}