@{
    Layout = "_LayoutH";
    @model Sys_dict
}
<div id="app" v-cloak>
    <form class="form-horizontal" onsubmit="return false">
        <div class="box-body">
            @await Component.InvokeAsync("DictType")
            <div class="form-group">
                <label class="col-sm-2 control-label">字典名称</label>
                <div class="col-sm-10">
                    <input class="form-control" v-model="DictName" v-focus type="text">
                </div>
            </div>

            <div class="form-group">
                <label class="col-sm-2 control-label">SQL语句</label>
                <div class="col-sm-10">
                    <textarea v-model="SQL" class="form-control" rows="10" placeholder=""></textarea>
                </div>
            </div>
            <div class="form-group">
                <label class="col-sm-2 control-label">备注</label>
                <div class="col-sm-10">
                    <textarea v-model="Remark" class="form-control" rows="3" placeholder="备注...100个字符以内"></textarea>
                    <p class="textarea-numberbar"><em class="textarea-length">{{count}}</em>/100</p>
                </div>
            </div>

            <table class="table table-bordered">
                <tr>
                    <td colspan="2">
                        <div class="input-group">
                            <input class="form-control" placeholder="Select Avatar" v-model="fileName" v-focus type="text">
                            <span class="input-group-btn">
                                <button class="btn btn-primary" type="button" v-on:click="fileL">选择</button>
                            </span>
                            <input v-on:click="uploadHeadImg" class="btn btn-primary radius pull-right" type="submit" v-model="submitImg">
                        </div>
                        <input class="file" style="display:none" ref="fileClick" v-on:change="changeL($event)" accept="image/*" name="file" v-focus type="file">
                    </td>
                </tr>
            </table>


        </div>
        <div class="box-footer">
            <div class="pull-right box-tools">
                <input v-on:click="addL" class="btn btn-primary radius" type="submit" v-model="submit">
            </div>
           
        </div>
    </form>
</div>

@section scripts{
    <script>
        var app = new Vue({
            el: "#app",
            data: {
                submit: "添加",
                submitImg:"添加图片",
                DictId:"@Model.DictId",
                Remark: "@Model.Remark",
                DictName: "@Model.DictName",
                DictType: "@Model.DictType",
                SQL: "@Model.SQL",
                acceptFile: [".png", ".jpg",".jpeg",".gif"],
                fileName: '',
                param: [],
            },
            computed: {
                count: function () {
                    return this.strLength(this.Remark, false);
                }
            },
            mounted: function(){
                var _self = this;
                _self.$nextTick(function () {
                    setTimeout(function () {
                        _self.FormatSql();
                    }, 500);
                });
            },
            methods: {
                  fileL: function () {
                            this.$refs.fileClick.click();
                        },
                  uploadHeadImg: function () {
                    var _self = this;
                    if (_self.param.length <= 0) {
                        layer.msg("Please select avatar", { icon: 2 });
                        return false;
                    }
                    var index = layer.load(1, {
                        shade: [0.1, '#fff'] //0.1透明度的白色背景
                    });
                    axios.post('/Dict/UploadStrategyImg', _self.param, {
                        headers: {
                            'Content-Type': 'multipart/form-data',
                            'fileExcel': 'fileExcel'
                        }
                    }).then(function (response) {
                        if (response.data.Item1 === 101) {
                            layer.tips(response.data.Item2, '.layui-layer-setwin', {
                                tips: [1, '#3595CC'],
                                time: 3000
                            });
                            layer.close(index);
                            return false;
                        }
                        if (response.data.Item1) {
                            layer.msg(response.data.Item2, { icon: 1, time: 1000 });
                            setTimeout(function () {
                                yui.layer_close3();
                            }, 500);
                        } else {
                            layer.msg(response.data.Item2 || errorMsg, { icon: 5 });
                        }
                        layer.close(index);
                    }).catch(function (error) {
                        layer.close(index);
                    });
                },
                    changeL: function (e) {
                    var file = e.target.files[0];
                    var _self = this;
                    if (file.size > 0) {
                        _self.param = new FormData();
                        _self.param.append('file', file);
                        _self.param.append('id', _self.DictId);
                        _self.fileName = file.name;
                    }
                 },
                  FormatSql: function () {
                    var _self = this;
                    var temp = _self.SQL;
                    //_self.SQL = _self.SQL.replace("&gt;", ">").replace("&lt;", "<").replace("&#x27;", "'").replace("&#xA;", " ");
                    _self.SQL = _self.SQL.replace(/&gt;/g, ">").replace(/&lt;/g, "<").replace(/&#x2B;/g, "+");
                    _self.SQL = _self.SQL.replace(/&#x27;/g, "'");
                    _self.SQL = _self.SQL.replace(/&#xA;/g, "\n");
                },
                 
                addL: function () {
                   var _self = this;
                    if (_self.DictName.length <= 0) {
                        layer.msg("字典名称不能为空", { icon: 2 });
                        return false;
                    }
                    if (_self.DictType.length <= 0) {
                        layer.msg("请选择字典类型", { icon: 2 });
                        return false;
                    }
                    var index = layer.load(1, {
                        shade: [0.1, '#fff'] //0.1透明度的白色背景
                    });
                    var data = {
                        id: _self.DictId,
                        DictName: _self.DictName,
                        DictType: _self.DictType,
                        Remark: _self.Remark,
                        SQL: _self.SQL
                    };
                    yui.$axiospostform('/Dict/AddOrUpdate', data)
                        .then(function (response) {
                            if (response.data.Item1 === 101) {
                                layer.tips(response.data.Item2, '.layui-layer-setwin', {
                                    tips: [1, '#3595CC'],
                                    time: 3000
                                });
                                layer.close(index);
                                return false;
                            }
                            if (response.data.Item1) {
                                layer.msg(response.data.Item2, { icon: 1, time: 1000 });
                                setTimeout(function () {
                                    yui.layer_close3();
                                }, 500);
                            } else {
                                layer.msg(response.data.Item2 || errorMsg, { icon: 5 });
                            }
                            layer.close(index);
                        })
                        .catch(function (error) {
                            layer.close(index);
                        });
                }
            }
        });
    </script>
}