<div class="content-wrapper">
    <div id="small">
        <div id="big">
            <img src="~/image/Test/hmewm.jpg" />
        </div>
    </div>

    <section class="content-header">
        <h1>
            策略
            <small>控制面板</small>
        </h1>
        <ol class="breadcrumb">
            <li><a href="#"><i class="fa fa-dashboard"></i> 首页</a></li>
            <li class="active">策略</li>
        </ol>
    </section>
    <section class="content">
        <div class="row">
            <div class="col-xs-12">
                <div class="box">
                    <div class="box-body">
                        <div id="Indicator" class="form-inline">
                            <div class="form-group">
                                <span class="input-group-addon form-control" type="submit" v-on:click="EnableEdit">日期范围</span>
                            </div>
                            <div class="form-group">
                                <input type="text" ref="datemin" id="datemin" class="form-control">
                            </div>
                            <div class="form-group">
                                <input type="text" ref="datemax" id="datemax" class="form-control">
                            </div>
                            <div class="form-group" style="display:none">
                                <input type="text" ref="DateWantSee" id="DateWantSee" class="form-control" @@change="WantSee">
                            </div>
                            <div class="form-group">
                                <select class="form-control" v-model="Scope">
                                    <option value="5day强中选强加上升通道">5day强中选强加上升通道</option>
                                    <option value="基金持股">基金持股</option>
                                    <option value="5day基本">5day基本</option>
                                    <option value="5day业绩预增">5day业绩预增</option>
                                    <option value="5day资金流入">5day资金流入</option>
                                </select>
                            </div>

                            @*<div class="form-group">
                                    <button v-on:click="searchL('')" type="submit" class="btn btn-success form-control"><i class="fa fa-search"></i> 搜索</button>
                                </div>*@

                            <div class="form-group">
                                <button name="SaveStrategy" v-on:click="SaveStrategy" type="submit" class="btn btn-success form-control"><i class="fa fa-save"></i> 保存</button>
                            </div>
                            <div class="form-group">
                                <button name="SaveAsStrategy" v-on:click="SaveAsStrategy" type="submit" class="btn btn-success form-control"><i class="fa fa-save"></i>另存</button>
                                <button type="button" v-on:click="deleteOperation()" class="btn btn-danger">
                                    <span class="glyphicon glyphicon-minus" aria-hidden="true"></span>删除
                                </button>
                            </div>


                            <div class="form-group" style="">
                                <select class="form-control" v-model="procedure">
                                    <option value="">请选择</option>
                                    <option v-for="item in procedurelist" :value="item.ProcedureName">{{item.Order}}-{{item.Remark}}</option>
                                </select>
                            </div>
                            <div class="form-group">
                                <button v-on:click="UpdateStocksTemp" type="submit" class="btn btn-success form-control"><i class="fa fa-search"></i>更新</button>
                            </div>
                            <div style="float:right;font-weight:bold">{{TotalCount}}--Total:{{serverNumber}}</div>
                        </div>

                        <div id="Indicator" class="form-inline">


                            <div class="form-group">
                                <input type="text" v-model="YesterdayPrice" placeholder="昨日价格" class="form-control">
                            </div>
                            <div class="form-group">
                                <input type="text" v-model="PredictAmplitude" placeholder="预测涨幅" class="form-control">
                            </div>
                            <div class="form-group">
                                <input type="text" v-model="PredictPrice" placeholder="预测价格" class="form-control">
                            </div>
                            <div class="form-group" style="float:right">
                                @*name="search"j加上这个子窗体就跟父窗体联合了*@
                                <button v-on:click="ChangeScope('Nday')" type="submit" class="btn btn-success form-control"><i class="fa fa-search"></i>Nday</button>
                            </div>
                            <div class="form-group" style="float:right">
                                @*name="search"j加上这个子窗体就跟父窗体联合了*@
                                <button v-on:click="ChangeScope('Today')" type="submit" class="btn btn-success form-control"><i class="fa fa-search"></i>当天</button>
                            </div>
                            <div class="form-group" style="float:right">
                                @*name="search"j加上这个子窗体就跟父窗体联合了*@
                                <button v-on:click="ChangeScope('5day')" type="submit" class="btn btn-success form-control"><i class="fa fa-search"></i>5天</button>
                            </div>
                        </div>

                        <div class="col-xs-12 col-md-12" style="padding-left:0px;padding-right:0px">
                            <div class="box">
                                <div class="box-header with-border">
                                    <h3 class="box-title">搜索条件</h3>
                                    <div class="box-tools pull-right">
                                        <button type="button" id="test" class="btn btn-box-tool" data-widget="collapse" data-toggle="tooltip">
                                            <i class="fa fa-minus"></i>
                                        </button>
                                    </div>
                                </div>

                                <div class="box-body">
                                    <div class="col-xs-12 col-md-12" style="padding-left:0px;padding-right:0px;margin-top:10px;margin-bottom:10px;display:none">
                                        <dl class="permission-list" style="overflow:hidden">
                                            <dt>
                                                行业
                                                <input v-on:click="checkAllSection" type="button" value="全选">
                                                <input v-on:click="RemoveAllSection" type="button" value="清空">
                                            </dt>
                                            <dd>
                                                <dl class="cl permission-list2">
                                                    <dt v-for="(item,index) in SectionList" style="float:left;margin-left:10px">
                                                        <label :class="{'icon-checked': CheckSectionList.indexOf(item)!=-1}">
                                                            <input type="checkbox" v-model="CheckSectionList" :value="item">
                                                            {{item}}
                                                        </label>
                                                    </dt>
                                                </dl>
                                            </dd>
                                        </dl>
                                    </div>


                                    <div class="col-xs-12 col-md-12" style="padding-left:0px;padding-right:0px;margin-top:10px;margin-bottom:10px;">

                                        <div class="form-group">
                                            <div class="col-xs-12 col-md-12">
                                                过滤器2
                                                <input class="form-control" list="SiftParaDataId" v-model="filter2" @@dblclick="ClearSiftParaData2" placeholder="a&b@@c|d    &组￥取非" />
                                                <datalist id="SiftParaDataId">
                                                    <option v-for="item in SiftParaDataList">{{item.SiftParaData}}</option>
                                                </datalist>


                                            </div>
                                            <div class="col-xs-12 col-md-9">
                                                过滤器
                                                <input class="form-control" list="SiftParaDataId2" v-model="filter" @@dblclick="ClearSiftParaData" placeholder="a&b@@c|d    &组￥取非" />
                                                <datalist id="SiftParaDataId2">
                                                    <option v-for="item in SiftParaDataListForThis">{{item.SiftParaData}}</option>
                                                </datalist>
                                            </div>
                                            <div class="col-xs-12 col-md-3">
                                                短期趋势
                                                <input class="form-control" list="Whole_ShortTrendId" v-model="Whole_ShortTrend_Sifter" @@click="ClearWhole_ShortTrend_Sifter" @@change="filterFunction()" placeholder="趋势过滤清空后，可以输入空格" />
                                                <datalist id="Whole_ShortTrendId">
                                                    <option v-for="item in Whole_ShortTrend">{{item}}</option>
                                                </datalist>
                                            </div>
                                            <div class="col-xs-12 col-md-3">
                                                5日涨幅
                                                <input type="text" v-model="Section_ThisStock_5DayUp" class="form-control">
                                            </div>
                                            <div class="col-xs-12 col-md-3">
                                                1月涨幅
                                                <input type="text" v-model="Section_ThisStock_1DayUp" class="form-control">

                                            </div>
                                            <div class="col-xs-12 col-md-3">
                                                行业排名
                                                <input type="text" v-model="Section_Section_Rank" class="form-control">
                                            </div>
                                            <div class="col-xs-12 col-md-3">
                                                中期趋势
                                                <input class="form-control" list="cookies" v-model="Whole_MiddleTrend_Sifter" @@click="ClearWhole_MiddleTrend_Sifter" @@change="filterFunction()" placeholder="趋势过滤清空后，可以输入空格" />
                                                <datalist id="cookies">
                                                    <option v-for="item in Whole_MiddleTrend">{{item}}</option>
                                                </datalist>
                                            </div>
                                            <div class="col-xs-6 col-md-2">
                                                整体评分
                                                <input type="text" v-model="Whole_BeatHowMany" class="form-control">
                                            </div>
                                            <div class="col-xs-6 col-md-2">
                                                技术评分
                                                <input type="text" v-model="Tec_BeatHowMany" class="form-control">
                                            </div>
                                            <div class="col-xs-6 col-md-2">
                                                资金评分
                                                <input type="text" v-model="Fund_BeatHowMany" class="form-control">
                                            </div>
                                            <div class="col-xs-6 col-md-2">
                                                消息评分
                                                <input type="text" v-model="Message_BeatHowMany" class="form-control">
                                            </div>
                                            <div class="col-xs-6 col-md-2">
                                                行业评分
                                                <input type="text" v-model="Section_BeatHowMany" class="form-control">
                                            </div>
                                            <div class="col-xs-6 col-md-2">
                                                基本面评分
                                                <input type="text" v-model="Basic_BeatHowMany" class="form-control">
                                            </div>

                                            <div class="col-xs-6 col-md-2">
                                                最近1天
                                                <input type="text" v-model="Day1Amplitude" class="form-control">
                                            </div>
                                            <div class="col-xs-6 col-md-2">
                                                最近2天
                                                <input type="text" v-model="Day2Amplitude" class="form-control">
                                            </div>
                                            <div class="col-xs-6 col-md-2">
                                                最近3天
                                                <input type="text" v-model="Day3Amplitude" class="form-control">
                                            </div>
                                            <div class="col-xs-6 col-md-2">
                                                最近4天
                                                <input type="text" v-model="Day4Amplitude" class="form-control">
                                            </div>
                                            <div class="col-xs-6 col-md-2">
                                                最近5天
                                                <input type="text" v-model="Day5Amplitude" class="form-control">
                                            </div>
                                            <div class="col-xs-6 col-md-2">
                                                最近6天
                                                <input type="text" v-model="Day6Amplitude" class="form-control">
                                            </div>



                                            <div class="col-xs-6 col-md-2">
                                                最大涨幅
                                                <input type="text" v-model="MaxAmplitude" class="form-control">
                                            </div>

                                            <div class="col-xs-6 col-md-2">
                                                今日涨幅
                                                <input type="text" v-model="GainPercent" class="form-control">
                                            </div>

                                            <div class="col-xs-6 col-md-2">
                                                多日涨幅
                                                <input type="text" v-model="NDayAmplitude" class="form-control">
                                            </div>
                                            <div class="col-xs-6 col-md-2">
                                                与最高差值比例
                                                <input type="text" v-model="GapPercent" class="form-control">
                                            </div>
                                            <div class="col-xs-6 col-md-2">
                                                与最低差值比例
                                                <input type="text" v-model="GapPercentWithLow" class="form-control">
                                            </div>



                                            <div class="col-xs-6 col-md-2">
                                                排序
                                                <input class="form-control" list="Sort" v-model="Sorter" @@change="SortFunction()" @@click="ClearSofter" placeholder="排序字段" />
                                                <datalist id="Sort">
                                                    <option v-for="item in SortItemList" :value="item.value">{{item.key}}</option>
                                                </datalist>
                                            </div>
                                            <div class="col-xs-6 col-md-2">
                                                过滤
                                                <button v-on:click="clickColumn" type="submit" class="btn btn-success form-control"><i class="fa fa-search"></i>过滤</button>
                                            </div>

                                            <div class="col-xs-6 col-md-1">
                                                过滤
                                                <button v-on:click="AddParaSifter" type="submit" class="btn btn-success form-control"><i class="fa fa-search"></i>增加</button>
                                            </div>
                                            <div class="col-xs-6 col-md-1">
                                                过滤
                                                <button v-on:click="DeleteParaSifter" type="submit" class="btn btn-success form-control"><i class="fa fa-search"></i>删除</button>
                                            </div>
                                            <div class="col-xs-6 col-md-1">
                                                过滤
                                                <button v-on:click="GetSiftParaDataList" type="submit" class="btn btn-success form-control"><i class="fa fa-search"></i>刷新</button>
                                            </div>


                                        </div>
                                    </div>
                                </div>
                            </div>


                            <div id="target" class="col-xs-12 col-md-12" style="padding-left:0px;padding-right:0px;margin-top:10px;margin-bottom:10px;">
                                <dl class="permission-list" style="overflow:hidden">
                                    <dt>
                                        策略
                                        <input v-on:click="checkAll" type="button" value="全选">
                                        <input v-on:click="RemoveAll" type="button" value="清空">
                                    </dt>
                                    <dd>
                                        <dl class="cl permission-list2">
                                            <dt v-for="(item,index) in DicList" style="float:left;margin-left:10px">
                                                <label @@change="clickMe(item.DictId)" :id="item.DictId" :class="{'icon-checked': checkedNames.indexOf(item.DictId)!=-1}">
                                                    <input type="checkbox" v-model="checkedNames" :value="item.DictId">
                                                    {{item.DictName}}
                                                </label>
                                            </dt>
                                        </dl>
                                    </dd>
                                </dl>
                            </div>

                            <div class="col-xs-12 col-md-4" style="padding-left:0px;padding-right:0px;margin-top:10px;margin-bottom:10px">
                                <img :src="StrategyImage" class="user-image" alt="User Image" style="width:100%;height:314px;" />
                            </div>
                            <div class="col-xs-12 col-md-4" style="padding-left:0px;padding-right:0px;margin-top:10px;margin-bottom:10px">
                                <textarea v-model="Remark" readonly="readonly" class="form-control mytext" rows="6" @@dblclick="EnableEdit"></textarea>
                                <textarea v-model="sql" readonly="readonly" class="form-control mytext sqlText" rows="8" style="margin-top:5px;"></textarea>
                            </div>
                            <div class="col-xs-12 col-md-4" style="padding-left:0px;padding-right:0px;margin-top:10px;margin-bottom:10px">
                                <textarea v-model="SQLdisplay" readonly="readonly" class="form-control mytext" rows="15"></textarea>
                            </div>
                            <div id="toolbar" class="btn-group">
                                <a type="button" href="/Stock/AllIndex" target="_blank" class="btn btn-default">
                                    <span class="glyphicon glyphicon-th-large" aria-hidden="true"></span>链接
                                </a>
                            </div>
                            <div class="col-xs-12 col-md-12 oneStock" v-for="(item,index) in filterStockList">

                                <div class="col-xs-12 col-md-12 picture">
                                    <div id="toolbar" class="btn-group">
                                        <button type="button" v-on:click="Show(item.StockNumber,item.StockName,item.TradePlace,item.Date,item.Whole_BeatHowMany,item.Tec_BeatHowMany,item.Fund_BeatHowMany,item.Message_BeatHowMany,item.Section_BeatHowMany,item.Basic_BeatHowMany)" class="btn btn-default">
                                            <span class="glyphicon glyphicon-plus" aria-hidden="true"></span>操作
                                        </button>
                                        <button id="btn_edit" v-on:click="Modify(item.StockNumber)" type="button" class="btn btn-default">
                                            <span class="glyphicon glyphicon-pencil" aria-hidden="true"></span>修改
                                        </button>
                                        <button type="button" v-on:click="ShowLatest(item.StockNumber,item.Date,item.StockName)" class="btn btn-default">
                                            <span class="glyphicon glyphicon-th-large" aria-hidden="true"></span>查看
                                        </button>
                                        <a type="button" :href="getStockUrl(item.TradePlace,item.StockNumber)" target="_blank" class="btn btn-default">
                                            <span class="glyphicon glyphicon-th-large" aria-hidden="true"></span>新浪
                                        </a>
                                        <a type="button" :href="getWencai(item.TradePlace,item.StockNumber)" target="_blank" class="btn btn-default">
                                            <span class="glyphicon glyphicon-th-large" aria-hidden="true"></span>问财
                                        </a>
                                        <a type="button" :href="addSelect(item.TradePlace,item.StockNumber)" target="_blank" class="btn btn-default">
                                            <span class="glyphicon glyphicon-plus" aria-hidden="true"></span>同花順
                                        </a>
                                        <button v-on:click="Sifter($event)" type="button" class="btn btn-default">
                                            <span class="glyphicon glyphicon-pencil" aria-hidden="true"></span>条件
                                        </button>
                                        @*<a type="button" :href="getTecPara(item.TradePlace,item.StockNumber)" target="_blank" class="btn btn-default">
                    <span class="glyphicon glyphicon-th-large" aria-hidden="true"></span>技术
                </a>*@
                                        @*<a type="button" :href="getTecParaJson(item.TradePlace,item.StockNumber)" target="_blank" class="btn btn-default">
                    <span class="glyphicon glyphicon-th-large" aria-hidden="true"></span>Json
                </a>*@
                                        <a type="button" :href="getTecParaHistory(item.TradePlace,item.StockNumber)" target="_blank" class="btn btn-default">
                                            <span class="glyphicon glyphicon-th-large" aria-hidden="true"></span>参数史
                                        </a>
                                        <a type="button" :href="getTrendHistory(item.TradePlace,item.StockNumber)" target="_blank" class="btn btn-default">
                                            <span class="glyphicon glyphicon-th-large" aria-hidden="true"></span>趋势史
                                        </a>
                                    </div>
                                    <div class="col-xs-12 col-md-12 sifter sifterControl">
                                        <div class="col-xs-12 col-md-12">
                                            过滤器2
                                            <input class="form-control" list="SiftParaDataId" v-model="filter2" @@dblclick="ClearSiftParaData2" placeholder="a&b@@c|d    &组￥取非" />
                                            <datalist id="SiftParaDataId">
                                                <option v-for="item in SiftParaDataList">{{item.SiftParaData}}</option>
                                            </datalist>


                                        </div>
                                        <div class="col-xs-12 col-md-9">
                                            过滤器
                                            <input class="form-control" list="SiftParaDataId2" v-model="filter" @@dblclick="ClearSiftParaData" placeholder="a&b@@c|d    &组￥取非" />
                                            <datalist id="SiftParaDataId2">
                                                <option v-for="item in SiftParaDataListForThis">{{item.SiftParaData}}</option>
                                            </datalist>
                                        </div>
                                        <div class="col-xs-12 col-md-3">
                                            短期趋势
                                            <input class="form-control" list="Whole_ShortTrendId" v-model="Whole_ShortTrend_Sifter" @@click="ClearWhole_ShortTrend_Sifter" @@change="filterFunction()" placeholder="趋势过滤清空后，可以输入空格" />
                                            <datalist id="Whole_ShortTrendId">
                                                <option v-for="item in Whole_ShortTrend">{{item}}</option>
                                            </datalist>
                                        </div>
                                        <div class="col-xs-12 col-md-3">
                                            5日涨幅
                                            <input type="text" v-model="Section_ThisStock_5DayUp" class="form-control">
                                        </div>
                                        <div class="col-xs-12 col-md-3">
                                            1月涨幅
                                            <input type="text" v-model="Section_ThisStock_1DayUp" class="form-control">

                                        </div>
                                        <div class="col-xs-12 col-md-3">
                                            行业排名
                                            <input type="text" v-model="Section_Section_Rank" class="form-control">
                                        </div>
                                        <div class="col-xs-12 col-md-3">
                                            中期趋势
                                            <input class="form-control" list="cookies" v-model="Whole_MiddleTrend_Sifter" @@click="ClearWhole_MiddleTrend_Sifter" @@change="filterFunction()" placeholder="趋势过滤清空后，可以输入空格" />
                                            <datalist id="cookies">
                                                <option v-for="item in Whole_MiddleTrend">{{item}}</option>
                                            </datalist>
                                        </div>
                                        <div class="col-xs-6 col-md-2">
                                            整体评分
                                            <input type="text" v-model="Whole_BeatHowMany" class="form-control">
                                        </div>
                                        <div class="col-xs-6 col-md-2">
                                            技术评分
                                            <input type="text" v-model="Tec_BeatHowMany" class="form-control">
                                        </div>
                                        <div class="col-xs-6 col-md-2">
                                            资金评分
                                            <input type="text" v-model="Fund_BeatHowMany" class="form-control">
                                        </div>
                                        <div class="col-xs-6 col-md-2">
                                            消息评分
                                            <input type="text" v-model="Message_BeatHowMany" class="form-control">
                                        </div>
                                        <div class="col-xs-6 col-md-2">
                                            行业评分
                                            <input type="text" v-model="Section_BeatHowMany" class="form-control">
                                        </div>
                                        <div class="col-xs-6 col-md-2">
                                            基本面评分
                                            <input type="text" v-model="Basic_BeatHowMany" class="form-control">
                                        </div>

                                        <div class="col-xs-6 col-md-2">
                                            最近1天
                                            <input type="text" v-model="Day1Amplitude" class="form-control">
                                        </div>
                                        <div class="col-xs-6 col-md-2">
                                            最近2天
                                            <input type="text" v-model="Day2Amplitude" class="form-control">
                                        </div>
                                        <div class="col-xs-6 col-md-2">
                                            最近3天
                                            <input type="text" v-model="Day3Amplitude" class="form-control">
                                        </div>
                                        <div class="col-xs-6 col-md-2">
                                            最近4天
                                            <input type="text" v-model="Day4Amplitude" class="form-control">
                                        </div>
                                        <div class="col-xs-6 col-md-2">
                                            最近5天
                                            <input type="text" v-model="Day5Amplitude" class="form-control">
                                        </div>
                                        <div class="col-xs-6 col-md-2">
                                            最近6天
                                            <input type="text" v-model="Day6Amplitude" class="form-control">
                                        </div>


                                        <div class="col-xs-6 col-md-2">
                                            最大涨幅
                                            <input type="text" v-model="MaxAmplitude" class="form-control">
                                        </div>

                                        <div class="col-xs-6 col-md-2">
                                            今日涨幅
                                            <input type="text" v-model="GainPercent" class="form-control">
                                        </div>

                                        <div class="col-xs-6 col-md-2">
                                            多日涨幅
                                            <input type="text" v-model="NDayAmplitude" class="form-control">
                                        </div>

                                        <div class="col-xs-6 col-md-2">
                                            与最高差值比例
                                            <input type="text" v-model="GapPercent" class="form-control">
                                        </div>
                                        <div class="col-xs-6 col-md-2">
                                            与最低差值比例
                                            <input type="text" v-model="GapPercentWithLow" class="form-control">
                                        </div>
                                        <div class="col-xs-6 col-md-2">
                                            排序
                                            <input class="form-control" list="Sort" v-model="Sorter" @@change="SortFunction()" @@click="ClearSofter" placeholder="排序字段" />
                                            <datalist id="Sort">
                                                @*<option value="GapPercent">最大间隔</option>
                        <option value="NDayAmplitude">N天最大涨幅</option>
                        <option value="GainPercent">今日涨幅</option>*@
                                                <option v-for="item in SortItemList" :value="item.value">{{item.key}}</option>
                                            </datalist>
                                        </div>

                                        <div class="col-xs-6 col-md-2">
                                            过滤
                                            <button v-on:click="clickColumn" type="submit" class="btn btn-success form-control"><i class="fa fa-search"></i>过滤</button>
                                        </div>

                                        <div class="col-xs-6 col-md-1">
                                            过滤
                                            <button v-on:click="AddParaSifter" type="submit" class="btn btn-success form-control"><i class="fa fa-search"></i>增加</button>
                                        </div>
                                        <div class="col-xs-6 col-md-1">
                                            过滤
                                            <button v-on:click="DeleteParaSifter" type="submit" class="btn btn-success form-control"><i class="fa fa-search"></i>删除</button>
                                        </div>
                                        <div class="col-xs-6 col-md-1">
                                            过滤
                                            <button v-on:click="GetSiftParaDataList" type="submit" class="btn btn-success form-control"><i class="fa fa-search"></i>刷新</button>
                                        </div>
                                    </div>

                                    <div style="float:right;font-weight:bold;margin-left:15px" v-on:click="GoDown()"><span class="glyphicon glyphicon-circle-arrow-down">底部</span></div>
                                    <div style="float:right;font-weight:bold" v-on:click="GoBack()">{{index}}/{{TotalCount}}&nbsp;&nbsp;&nbsp;<span class="glyphicon glyphicon-circle-arrow-up">顶部</span></div>
                                    <div><span style="font-weight:bold">概念：</span><span>{{item.Conception}}</span></div>

                                    <div><span style="font-weight:bold">{{item.StockName}} {{item.StockNumber}}-----价格：{{item.CurrentPrice}}---涨幅：{{item.GainPercent}}------(最大间隔{{ToFix(item.GapPercent)}})(与最低值间隔{{ToFix(item.GapPercentWithLow)}})（多天涨幅{{ToFix(item.NDayAmplitude)}}）（一月涨幅{{ToFix(item.Section_ThisStock_1DayUp)}}）</span></div>
                                    @*<div><span style="font-weight:bold">技术：</span><span>{{item.ProcessedPara}}</span></div>*@

                                </div>


                                <div class="col-xs-6 col-md-3 picture">
                                    <span>日</span>
                                    <img v-bind:src="getImgUrl(item.TradePlace,item.StockNumber,'','-2')" style="width:100%;height:230px" />
                                </div>
                                <div class="col-xs-6  col-md-3 picture">
                                    <span>日</span>
                                    <img v-bind:src="getImgUrl(item.TradePlace,item.StockNumber,'','-5')" style="width:100%;height:230px" />
                                </div>
                                <div class="col-xs-6  col-md-3 picture">
                                    <span>15分</span>
                                    <img v-bind:src="getImgUrl(item.TradePlace,item.StockNumber,'M15','-3')" style="width:100%;height:230px" />
                                </div>
                                <div class="col-xs-6  col-md-3 picture">
                                    <span>5分</span>
                                    <img v-bind:src="getImgUrl(item.TradePlace,item.StockNumber,'M5','-3')" style="width:100%;height:230px" />
                                </div>

                                <div class="col-xs-12 col-md-12">
                                    <div>{{jsonDateFormat(item.ParaTime)}}<span style="font-weight:bold">参数：</span><span v-html="Emphasis(item.ProcessedPara)"></span></div>
                                </div>
                            </div>



                            <div id="targetDown" class="col-xs-12 col-md-12" style="padding-left:0px;padding-right:0px;margin-top:10px;margin-bottom:10px;">
                            </div>

                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
</div>





@section styles{
    <style>
        .picture {
            padding-left: 0px;
            padding-right: 0px;
        }

        .oneStock {
            border-bottom: dashed 10px #0094ff;
            margin-bottom: 20px;
        }

        .info {
            padding-left: 20px;
            display: flex;
            align-items: center;
            justify-content: space-between;
            margin-bottom: 0px;
        }

        .descpription {
            font-size: 12px;
            margin-bottom: 3px;
        }

        .cl {
            font-size: 10px;
            margin-bottom: 0px;
        }

        .permission-list {
            margin-bottom: 0px;
        }

        #small {
            width: 50px;
            height: 50px;
            background: url('../../wwwroot/image/test/bgs.png') no-repeat -159px -51px;
            position: fixed;
            top: 40%;
            right: 10px;
            z-index: 9999
        }

        .selected {
            color: red;
        }

        #big {
            width: 210px;
            height: 210px;
            position: absolute;
            left: -210px;
            display: none;
            z-index: 9999
        }

        .icon-checked {
            color: red;
        }

        .permission-list {
            border-bottom: 1px solid
        }

        #big img {
            width: 100%;
            height: 100%;
        }

        .sifter {
            display: none;
        }
    </style>
}


@section scripts{


    <script>
        //1.获取页面
        var small = document.getElementById('small');
        var big = document.getElementById('big');

        //2.鼠标移入事件
        small.onmouseover = function () {
            big.style.display = 'block';
        }
        //3.鼠标移出事件
        small.onmouseout = function () {
            big.style.display = "none";
        }
    </script>

    <script type="text/javascript">
        var app = new Vue({
            el: '#app',
            data: {
                YesterdayPrice:'',
                PredictAmplitude:'',
                PredictPrice:'',

                Scope:'基金持股',
                sqlTemp:'',
                datemin: '',
                datemax: '',
                DateWantSee:'',
                stockList: [],
                Conception:'',
                filter: '',
                filter2: '',
                filterStockList:[],
                DicList: [],
                Strategy: '',
                SQLdisplay: '',
                Remark: '',
                Id: '',
                DictName: '',
                DictType: '',
                Section: '',
              StrategyImage:"~/upload/strategy/e7c705e85b284e229037c100f65b4032.png",

                Whole_MiddleTrend_Sifter: '',
                Whole_ShortTrend_Sifter: '',

                Remark: '',
                flag: true,
                TotalCount: '',
                serverNumber: '',
                InOrAfterTrade: '盘后',
                sql: '',
                DateList: [],
                checkedNames: [],
                CheckSectionList: [],
                SectionList: ["电气设备-200", "化学制品-190", "计算机应用-168", "专用设备-159", "传媒-141", "汽车零部件-130", "通用设备-124", "建筑装饰-122", "房地产开发-117", "化学制药-105", "通信设备-99", "有色冶炼加工-85", "半导体及元件-78", "医疗器械服务-77", "零售-76", "电力-75", "化工合成材料-73", "家用轻工-68", "光学光电子-68", "建筑材料-68", "中药-66", "国防军工-61", "电子制造-59", "食品加工制造-56", "环保工程-55", "服装家纺-54", "基础化学-50", "白色家电-49", "物流-44", "证券-43", "计算机设备-43", "饮料制造-42", "燃气水务-40", "保险及其他-35", "煤炭开采加工-35", "包装印刷-35", "通信服务-34", "其他电子-34", "农产品加工-34", "银行-33", "生物制品-33", "钢铁-32", "纺织制造-31", "仪器仪表-31", "新材料-30", "港口航运-29", "综合-27", "公路铁路运输-25", "医药商业-25", "贸易-25", "汽车整车-24", "景点及旅游-22", "非汽车交运-22", "种植业与林业-21", "造纸-20", "养殖业-19", "采掘服务-16", "化工新材料-15", "机场航运-12", "视听器材-11", "园区开发-11", "石油矿业开采-11", "交运设备服务-11", "农业服务-9", "公交-9", "酒店及餐饮-8", "， 暂无相关评论。-2"],
                width: window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth,
                height: window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight,


                sqlTemp:"",

                Whole_ShortTrend_text: "",
                Whole_ShortTrend: [],
                Whole_ShortTrend_Check: [],

                Whole_MiddleTrend_text: "",
                Whole_MiddleTrend: [],
                Whole_MiddleTrend_Check: [],

                Whole_Level2Suggest_text: "",
                Whole_Level2Suggest: ["连续上涨", "今日净流进", "价量齐升"],
                Whole_Level2Suggest_Check: [],

                Whole_DescriptionLevel2_text: "",
                Whole_DescriptionLevel2: ["上方", "持平", "下方", "上涨趋势有所减缓", "加速上涨趋势", "回落整理阶段且下跌有加速趋势", "回落整理阶段且下跌趋势有所减缓", "目前反弹趋势有所减缓", "前正处于反弹阶段", "关注", "涨停", "较为活跃", "中线买入信号", "资金方面呈流入状态", "资金流出量适中", "资金流出量较多", "该股资金方面受到市场关注，多方势头较强", "有重大利好消息"],
                Whole_DescriptionLevel2_Check: [],

                Fund_Level2_Description_text: "",
                Fund_Level2_Description: ["流入", "集中了一定的筹码", "较为活跃", "该股涨停", "资金流出量较少"],
                Fund_Level2_Description_Check: [],

                Fund_Level2_GoWhere_text: "",
                Fund_Level2_GoWhere: ["流入", "远高于行业平均水平"],
                Fund_Level2_GoWhere_Check: [],

                Fund_Section_Overview_text: "",
                Fund_Section_Overview: ["高于"],
                Fund_Section_Overview_Check: [],

                Basic_Institute_Ratings_text: "",
                Basic_Institute_Ratings: ["卖出", "减持", "中性", "增持", "买入"],
                Basic_Institute_Ratings_Check: [],

                Fund_MainForceControl_text: "",
                Fund_MainForceControl: ["没有控盘", "轻度控盘", "中度控盘", "高度控盘"],
                Fund_MainForceControl_Check: [],


                Conception_text: '',
                Conception: [],
                Conception_Check: [],


                Section_ThisStock_5DayUp: ">=-1000,<=1000",
                Section_ThisStock_1DayUp: ">=-1000,<=1000",
                Section_Section_Rank: ">=-100,<=1000",
                Whole_BeatHowMany: ">=0,<=100",
                Tec_BeatHowMany: ">=0,<=100",
                Fund_BeatHowMany: ">=0,<=100",
                Message_BeatHowMany: ">=0,<=100",
                Section_BeatHowMany: ">=0,<=100",
                Basic_BeatHowMany: ">=0,<=100",
                MaxAmplitude: ">=-22,<=22",
                GainPercent: ">=-22,<=22",
                NDayAmplitude: ">=-50,<=100",

                Day1Amplitude: ">=-22,<=22",
                Day2Amplitude: ">=-22,<=22",
                Day3Amplitude: ">=-22,<=22",
                Day4Amplitude: ">=-22,<=22",
                Day5Amplitude: ">=-22,<=22",
                Day6Amplitude: ">=-22,<=22",
                Day7Amplitude: ">=-22,<=22",
                GapPercent: ">=-20,<=40",
                GapPercentWithLow: ">=-20,<=40",
                SortItemList: [{ "key": "最大间隔", "value": "GapPercent" },{ "key": "N天最大涨幅", "value": "NDayAmplitude" },{ "key": "与最低涨幅", "value": "GapPercentWithLow" },{ "key": "今日涨幅", "value": "GainPercent" }],
                Sorter: "",

                SiftParaDataList:"",
                SiftParaDataListForThis: "",

                procedurelist: [],
                procedure:"",


            },
            mounted: function () {
                var _self = this;
                _self.$nextTick(function () {
                    //显示active
                    _self.$refs.Stock.parentNode.parentNode.classList.add("active");
                    _self.$refs.Stock.classList.add("active");
                    _self.GetDicList();
                    _self.GetProcedure();

                    //_self.GetDateList();
                    _self.$refs.datemin.value = _self.getYesterday();
                    _self.$refs.datemax.value = _self.getYesterday();
                    _self.$refs.DateWantSee.value = _self.getYesterday();
                    _self.checkAllSection();

                    $('#datemin').datetimepicker({
                        format: 'yyyy-mm-dd',
                        minView: 2,
                        autoclose: true,
                        language: "en-us",
                        pickerPosition: 'bottom-right'
                    });


                    $('#datemax').datetimepicker({
                        format: 'yyyy-mm-dd',
                        minView: 2,
                        autoclose: true,
                        language: "en-us",
                        pickerPosition: 'bottom-right'
                    });
                    $('#DateWantSee').datetimepicker({
                        format: 'yyyy-mm-dd',
                        minView: 2,
                        autoclose: true,
                        language: "en-us",
                        pickerPosition: 'bottom-right'
                    });
                    setTimeout(function () {
                        //_self.searchL();
                        yui.getDomById("test").click();
                        $("#Indicator").css({ "background": "white" });
                    }, 500);
                });
            },
            watch: {
                Strategy(val, oldval) {
                    var _self = this;
                    _self.DicList.forEach(function (item, index) {
                        if (item.DictId== val) {
                            _self.Id = item.DictId;
                            _self.DictName = item.DictName;
                            _self.DictType = item.DictType;
                            _self.Remark = item.Remark;
                            _self.SQLdisplay = item.SQL;
                            _self.sqlTemp = _self.SQLdisplay;
                        }
                    });
                    //Remark = val
                },
                YesterdayPrice(val, oldval) {
                    var _self = this;
                    _self.PredictPrice = _self.YesterdayPrice * (100 + Number(_self.PredictAmplitude)) / 100;
                },

                PredictAmplitude(val, oldval) {
                    var _self = this;
                    _self.PredictPrice = _self.YesterdayPrice * (100 + Number(_self.PredictAmplitude)) / 100;
                },

            },


            methods: {
                Sifter: function (e) {
                    $(e.target).parents(".picture").children(".sifterControl").toggleClass("sifter");
                },
                GoBack: function() {
                    target.scrollIntoView();
                },
                ToFix: function(value) {
                   return value.toFixed(1);
                },

               GoDown: function() {
                    targetDown.scrollIntoView();
                },
                GetImage: function (strategyId) {
                    var _self = this;

                    _self.DicList.forEach(function (item, index) {
                        if (item.DictId == strategyId) {
                            res = item.StrategyImg;
                            res = res.replace(/\\/g,'/');
                            _self.StrategyImage = res;
                             //console.log(_self.StrategyImage);
                            return res;
                       }
                   })
                },
                SortFunction: function () {
                    var _self = this;
                    _self.sortKey(_self.filterStockList,_self.Sorter);

                },
                sortKey: function (array,key) {
                      return array.sort(function(a,b){
                          var x = a[key];
                          var y = b[key];
                          return ((y<x)?-1:(x>y)?1:0)   //从小到大排序
                    })
                 },

                WantSee: function () {
                    var _self = this;
                    var data = {
                        datemin: _self.$refs.datemin.value,
                        datemax: _self.$refs.datemax.value,
                        DateWantSee: _self.$refs.DateWantSee.value,
                        StrategyId: _self.Strategy,
                        StrategyIdList: _self.checkedNames,
                        InOrAfterTrade: _self.InOrAfterTrade,
                        Section: _self.Section,
                        CheckSectionList: _self.CheckSectionList,
                        sql: _self.SQLdisplay,
                    };
                    $("#Indicator").css({ "background": "#f39c12" });
                    yui.$axiospostform('/Stock/GetDataWantSeeBBySql', data).then(function (response) {
                        _self.stockList = response.data.list;
                        _self.sql = response.data.sql;
                        //把中期趋势
                        _self.getTrend(_self.stockList);
                        _self.filterStockList = _self.stockList;
                        _self.serverNumber = _self.stockList.length;
                        _self.TotalCount = _self.filterStockList.length;
                        if (_self.sql.indexOf("错误") != -1) {
                            layer.msg("SQL错误" || errorMsg, { icon: 5 });
                            $("#Indicator").css({ "background": "red" });

                        } else {
                            layer.msg("搜索完成", { icon: 1, time: 1000 });
                            $("#Indicator").css({ "background": "#7bd4d4" });
                        }

                    }).catch(function (error) {
                        console.info(error);
                    });

                },
                UpdateStocksTemp: function () {
                    var _self = this;
                    var data = {
                        datemin: _self.$refs.datemin.value,
                        datemax: _self.$refs.datemax.value,
                        Procedure: _self.procedure,
                    };
                    $("#Indicator").css({ "background": "#f39c12" });
                    yui.$axiospostform('/Stock/UpdateStocksTemp', data).then(function (response) {
                        if (response.data=='True') {
                            layer.msg("执行完成", { icon: 1, time: 1000 });
                            $("#Indicator").css({ "background": "#7bd4d4" });
                        } else {
                            layer.msg("执行失败" || errorMsg, { icon: 5 });
                            $("#Indicator").css({ "background": "red" });
                        }

                    }).catch(function (error) {
                        console.info(error);
                    });

                },
                ChangeScope: function(val) {
                    var _self = this;
                    var text = '';
                    var newsql = '';
                    text = _self.SQLdisplay.replace(/#/g, val);
                    text = text.replace(/scope/g, _self.Scope);
                    _self.searchL(text);
                },
                ClearWhole_ShortTrend_Sifter: function () {
                    var _self = this;
                    _self.Section = '';
                    _self.Whole_ShortTrend_Sifter = '';

                },

                  ClearSiftParaData2: function () {
                    var _self = this;
                    _self.filter2 = '';

                },
                     ClearSiftParaData: function () {
                    var _self = this;
                    _self.filter = '';

                },

                ClearWhole_MiddleTrend_Sifter: function () {
                    var _self = this;
                    _self.Section = '';
                    _self.Whole_MiddleTrend_Sifter = '';
                },

               ClearSofter: function () {
                   var _self = this;
                    _self.Sorter = '';
                },

                addSelect: function (TradePlace, StockNumber) {
                    //var url = 'http://stockpage.10jqka.com.cn/spService/' + StockNumber + '/Header/selfStockAdd';
                    var url = 'http://stock.10jqka.com.cn/self.php?stockcode=' + StockNumber + '&op=add&&jsonp=jQuery1830004172045065825136_1595810971471&_=1595811031587';
                    return url;
                },
                filterFunctionBackUp: function () {
                    var _self = this;
                    if (_self.filter == "" && _self.filter2 == "") {
                        _self.filterStockList = [];
                        if (typeof (_self.stockList) != "undefined") {
                            _self.stockList.forEach(function (item, index) {
                                flagScore = 0;
                                flagContain = 0;
                                //分数检查
                                if (_self.CheckScore(item.Section_ThisStock_5DayUp, _self.Section_ThisStock_5DayUp)
                                    && _self.CheckScore(item.Section_ThisStock_1DayUp, _self.Section_ThisStock_1DayUp)
                                    && _self.CheckScore(item.Section_Section_Rank, _self.Section_Section_Rank)
                                    && _self.CheckScore(item.Whole_BeatHowMany, _self.Whole_BeatHowMany)
                                    && _self.CheckScore(item.Tec_BeatHowMany, _self.Tec_BeatHowMany)
                                    && _self.CheckScore(item.Fund_BeatHowMany, _self.Fund_BeatHowMany)
                                    && _self.CheckScore(item.Message_BeatHowMany, _self.Message_BeatHowMany)
                                    && _self.CheckScore(item.Section_BeatHowMany, _self.Section_BeatHowMany)
                                    && _self.CheckScore(item.Basic_BeatHowMany, _self.Basic_BeatHowMany)
                                    && _self.CheckScore(item.MaxAmplitude, _self.MaxAmplitude)
                                    && _self.CheckScore(item.GainPercent, _self.GainPercent)
                                    && _self.CheckScore(item.NDayAmplitude, _self.NDayAmplitude)
                                    && _self.CheckScore(item.Day1Amplitude, _self.Day1Amplitude)
                                    && _self.CheckScore(item.Day2Amplitude, _self.Day2Amplitude)
                                    && _self.CheckScore(item.Day3Amplitude, _self.Day3Amplitude)
                                    && _self.CheckScore(item.Day4Amplitude, _self.Day4Amplitude)
                                    && _self.CheckScore(item.Day5Amplitude, _self.Day5Amplitude)
                                    && _self.CheckScore(item.Day6Amplitude, _self.Day6Amplitude)
                                    && _self.CheckScore2(item.GapPercent, _self.GapPercent)
                                            && _self.CheckScore2(item.GapPercentWithLow, _self.GapPercentWithLow)
                                    //&& _self.CheckScore(item.HighDay, _self.HighDay)
                                ) {
                                    flagScore = 1;
                                }
                                var content = _self.GetProperty(item);
                                flagContain = _self.CheckExist(content, _self.Whole_MiddleTrend_Sifter) && _self.CheckExist(content, _self.Whole_ShortTrend_Sifter)
                                if (flagScore && flagContain) {
                                    _self.filterStockList.push(item);
                                }
                            });
                            _self.TotalCount = _self.filterStockList.length;
                        }
                        return;
                    }

                    var and = [];
                    if (_self.filter.indexOf("&") != -1) {
                        and = _self.filter.split("@@")[0].split("&");
                    } else {
                        var temp = _self.filter.split("@@")[0];
                        if (temp != '') {
                            and.push(temp);
                        }
                    }


                    var and2 = [];
                    if (_self.filter2.indexOf("&") != -1) {
                        and2 = _self.filter2.split("@@")[0].split("&");
                    } else {
                        var temp2 = _self.filter2.split("@@")[0];
                        if (temp2 != '') {
                            and2.push(temp2);
                        }
                    }

                    var or = [];
                    if (_self.filter.indexOf("|") != -1) {
                        or = _self.filter.split("@@")[1].split("|");
                    } else {
                        var temp = _self.filter.split("@@")[1];
                        if (temp != '') {
                            or.push(temp);
                        }
                    }

                    var or2 = [];
                    if (_self.filter2.indexOf("|") != -1) {
                        or2 = _self.filter2.split("@@")[1].split("|");
                    } else {
                        var temp2 = _self.filter2.split("@@")[1];
                        if (temp2 != '') {
                            or2.push(temp2);
                        }
                    }
                    _self.filterStockList = [];
                    _self.stockList.forEach(function (item, index) {
                        flagAnd = 1;
                        flagOr = 0;
                        flagAnd2 = 1;
                        flagOr2 = 0;
                        flagScore = 0;
                        flagContain = 0;
                        var content = _self.GetProperty(item);
                        and.forEach(function (anditem, index) {
                            //只要一个不存在就不行

                            if (anditem.indexOf("￥") != -1) {
                                anditemProcessed = anditem.replace(/￥/g, "");
                                if (content.indexOf(anditemProcessed) != -1)
                                    flagAnd = 0;
                            } else {
                                if (content.indexOf(anditem) == -1)
                                    flagAnd = 0;
                            }
                        });

                        or.forEach(function (oritem, index) {
                            //只要存在一个就好
                            if (content.indexOf(oritem) != -1)
                                flagOr = 1;
                        });
                        if (or.length<=0) {
                            flagOr = 1;
                        }
                        if (_self.filter=='') {
                            flagOr = 1;
                            flagAnd = 1;
                        }


                        and2.forEach(function (anditem, index) {
                            //只要一个不存在就不行

                            if (anditem.indexOf("￥") != -1) {
                                anditemProcessed2 = anditem.replace(/￥/g, "");
                                if (content.indexOf(anditemProcessed2) != -1)
                                    flagAnd2 = 0;
                            } else {
                                if (content.indexOf(anditem) == -1)
                                    flagAnd2 = 0;
                            }
                        });

                        or2.forEach(function (oritem, index) {
                            //只要存在一个就好
                            if (content.indexOf(oritem) != -1)
                                flagOr2 = 1;
                        });
                        if (or2.length <= 0) {
                            flagOr2 = 1;
                        }

                        if (_self.filter2 == '') {
                            flagOr2 = 1;
                            flagAnd2 = 1;
                        }

                        //分数检查
                        if (_self.CheckScore(item.Section_ThisStock_5DayUp, _self.Section_ThisStock_5DayUp)
                            && _self.CheckScore(item.Section_ThisStock_1DayUp, _self.Section_ThisStock_1DayUp)
                            && _self.CheckScore(item.Section_Section_Rank, _self.Section_Section_Rank)
                            && _self.CheckScore(item.Whole_BeatHowMany, _self.Whole_BeatHowMany)
                            && _self.CheckScore(item.Tec_BeatHowMany, _self.Tec_BeatHowMany)
                            && _self.CheckScore(item.Fund_BeatHowMany, _self.Fund_BeatHowMany)
                            && _self.CheckScore(item.Message_BeatHowMany, _self.Message_BeatHowMany)
                            && _self.CheckScore(item.Section_BeatHowMany, _self.Section_BeatHowMany)
                            && _self.CheckScore(item.Basic_BeatHowMany, _self.Basic_BeatHowMany)
                            && _self.CheckScore(item.MaxAmplitude, _self.MaxAmplitude)
                            && _self.CheckScore(item.GainPercent, _self.GainPercent)
                            && _self.CheckScore(item.NDayAmplitude, _self.NDayAmplitude)
                            && _self.CheckScore(item.Day1Amplitude, _self.Day1Amplitude)
                            && _self.CheckScore(item.Day2Amplitude, _self.Day2Amplitude)
                            && _self.CheckScore(item.Day3Amplitude, _self.Day3Amplitude)
                            && _self.CheckScore(item.Day4Amplitude, _self.Day4Amplitude)
                            && _self.CheckScore(item.Day5Amplitude, _self.Day5Amplitude)
                            && _self.CheckScore(item.Day6Amplitude, _self.Day6Amplitude)
                            && _self.CheckScore2(item.GapPercent, _self.GapPercent)
                         && _self.CheckScore2(item.GapPercentWithLow, _self.GapPercentWithLow)
                            //&& _self.CheckScore(item.HighDay, _self.HighDay)
                        ) {
                              flagScore = 1;
                         }


                        flagContain = _self.CheckExist(content, _self.Whole_MiddleTrend_Sifter) && _self.CheckExist(content, _self.Whole_ShortTrend_Sifter)

                        if (flagAnd && flagOr && flagAnd2 && flagOr2 && flagScore && flagContain ) {
                            _self.filterStockList.push(item);
                        }
                    });
                    _self.TotalCount = _self.filterStockList.length;
                },

                filterFunction: function () {
                    var _self = this;
                    if (_self.filter == "" && _self.filter2 == "") {
                        _self.filterStockList = [];
                        if (typeof (_self.stockList) != "undefined") {
                            _self.stockList.forEach(function (item, index) {
                                flagScore = 0;
                                flagContain = 0;
                                //分数检查
                                if (_self.CheckScore(item.Section_ThisStock_5DayUp, _self.Section_ThisStock_5DayUp)
                                    && _self.CheckScore(item.Section_ThisStock_1DayUp, _self.Section_ThisStock_1DayUp)
                                    && _self.CheckScore(item.Section_Section_Rank, _self.Section_Section_Rank)
                                    && _self.CheckScore(item.Whole_BeatHowMany, _self.Whole_BeatHowMany)
                                    && _self.CheckScore(item.Tec_BeatHowMany, _self.Tec_BeatHowMany)
                                    && _self.CheckScore(item.Fund_BeatHowMany, _self.Fund_BeatHowMany)
                                    && _self.CheckScore(item.Message_BeatHowMany, _self.Message_BeatHowMany)
                                    && _self.CheckScore(item.Section_BeatHowMany, _self.Section_BeatHowMany)
                                    && _self.CheckScore(item.Basic_BeatHowMany, _self.Basic_BeatHowMany)
                                    && _self.CheckScore(item.MaxAmplitude, _self.MaxAmplitude)
                                    && _self.CheckScore(item.GainPercent, _self.GainPercent)
                                    && _self.CheckScore(item.NDayAmplitude, _self.NDayAmplitude)
                                    && _self.CheckScore(item.Day1Amplitude, _self.Day1Amplitude)
                                    && _self.CheckScore(item.Day2Amplitude, _self.Day2Amplitude)
                                    && _self.CheckScore(item.Day3Amplitude, _self.Day3Amplitude)
                                    && _self.CheckScore(item.Day4Amplitude, _self.Day4Amplitude)
                                    && _self.CheckScore(item.Day5Amplitude, _self.Day5Amplitude)
                                    && _self.CheckScore(item.Day6Amplitude, _self.Day6Amplitude)
                                    && _self.CheckScore2(item.GapPercent, _self.GapPercent)
                                            && _self.CheckScore2(item.GapPercentWithLow, _self.GapPercentWithLow)
                                    //&& _self.CheckScore(item.HighDay, _self.HighDay)
                                ) {
                                    flagScore = 1;
                                }
                                var content = _self.GetProperty(item);
                                flagContain = _self.CheckExist(content, _self.Whole_MiddleTrend_Sifter) && _self.CheckExist(content, _self.Whole_ShortTrend_Sifter)
                                if (flagScore && flagContain) {
                                    _self.filterStockList.push(item);
                                }
                            });
                            _self.TotalCount = _self.filterStockList.length;
                        }
                        return;
                    }


                    _self.filterStockList = [];
                    _self.stockList.forEach(function (item, index) {
                        flagRegex1 = 0;
                        flagRegex2 = 0;
                        var content = _self.GetProperty(item);
                        Regex1 = new RegExp(_self.filter);
                        Regex2 =new RegExp(_self.filter2);
                        flagRegex1 = Regex1.test(content);
                        flagRegex2 = Regex2.test(content);
                        //分数检查
                        if (_self.CheckScore(item.Section_ThisStock_5DayUp, _self.Section_ThisStock_5DayUp)
                            && _self.CheckScore(item.Section_ThisStock_1DayUp, _self.Section_ThisStock_1DayUp)
                            && _self.CheckScore(item.Section_Section_Rank, _self.Section_Section_Rank)
                            && _self.CheckScore(item.Whole_BeatHowMany, _self.Whole_BeatHowMany)
                            && _self.CheckScore(item.Tec_BeatHowMany, _self.Tec_BeatHowMany)
                            && _self.CheckScore(item.Fund_BeatHowMany, _self.Fund_BeatHowMany)
                            && _self.CheckScore(item.Message_BeatHowMany, _self.Message_BeatHowMany)
                            && _self.CheckScore(item.Section_BeatHowMany, _self.Section_BeatHowMany)
                            && _self.CheckScore(item.Basic_BeatHowMany, _self.Basic_BeatHowMany)
                            && _self.CheckScore(item.MaxAmplitude, _self.MaxAmplitude)
                            && _self.CheckScore(item.GainPercent, _self.GainPercent)
                            && _self.CheckScore(item.NDayAmplitude, _self.NDayAmplitude)
                            && _self.CheckScore(item.Day1Amplitude, _self.Day1Amplitude)
                            && _self.CheckScore(item.Day2Amplitude, _self.Day2Amplitude)
                            && _self.CheckScore(item.Day3Amplitude, _self.Day3Amplitude)
                            && _self.CheckScore(item.Day4Amplitude, _self.Day4Amplitude)
                            && _self.CheckScore(item.Day5Amplitude, _self.Day5Amplitude)
                            && _self.CheckScore(item.Day6Amplitude, _self.Day6Amplitude)
                            && _self.CheckScore2(item.GapPercent, _self.GapPercent)
                         && _self.CheckScore2(item.GapPercentWithLow, _self.GapPercentWithLow)
                            //&& _self.CheckScore(item.HighDay, _self.HighDay)
                        ) {
                              flagScore = 1;
                         }


                        flagContain = _self.CheckExist(content, _self.Whole_MiddleTrend_Sifter) && _self.CheckExist(content, _self.Whole_ShortTrend_Sifter)
                        if (flagRegex1 && flagRegex2 && flagScore && flagContain ) {
                            _self.filterStockList.push(item);
                        }
                    });
                    _self.TotalCount = _self.filterStockList.length;
                },

                CheckScore: function (score, condition) {
                    var temp = condition.replace(/>=/g, "").replace(/<=/g, "").split(',');
                    var a = temp[0];
                    var b = temp[1];
                    if (score >= Number(temp[0]) && score <= Number(temp[1])) {
                        return true;
                    } else {
                        return false;
                    }

                },

                  CheckScore2: function (score, condition) {
                    var temp = condition.replace(/>=/g, "").replace(/<=/g, "").split(',');
                    var a = temp[0];
                    var b = temp[1];
                    if (score >= Number(temp[0]) && score <= Number(temp[1])) {
                        return true;
                    } else {
                        return false;
                    }

                },
                //Whole_MiddleTrend_Sifter
                CheckExist: function (content, condition) {
                    if (condition == '') {
                        return true;
                    }
                    if (content.indexOf(condition)!=-1) {
                        return true;
                    } else {
                        return false;
                    }

                },


               GetProperty: function (obj) {
                var props = "";
                // 开始遍历
                for (var p in obj) {
                    // 方法
                    if (typeof (obj[p]) == "function") {
                    } else {
                        // p 为属性名称，obj[p]为对应属性的值
                        props += p + "=" + obj[p] + "\t";
                    }
                }
                   // 最后显示所有的属性

                   return props.toLowerCase();

             },

                clickColumn: function () {
                    var _self = this;
                    _self.filterFunction();
                    //var command = "";

                    //command =command+_self.processSql(_self.Whole_ShortTrend_text, _self.Whole_ShortTrend_Check, "Whole_ShortTrend","t1");

                    //command = command + _self.processSql(_self.Whole_MiddleTrend_text, _self.Whole_MiddleTrend_Check, "Whole_MiddleTrend", "t1");

                    //command = command + _self.processSql(_self.Whole_Level2Suggest_text, _self.Whole_Level2Suggest_Check, "Whole_Level2Suggest", "t1");

                    //command = command + _self.processSql(_self.Whole_DescriptionLevel2_text, _self.Whole_DescriptionLevel2_Check, "Whole_DescriptionLevel2", "t1");

                    //command = command + _self.processSql(_self.Fund_Level2_Description_text, _self.Fund_Level2_Description_Check, "Fund_Level2_Description", "t1");

                    //command = command + _self.processSql(_self.Fund_Level2_GoWhere_text, _self.Fund_Level2_GoWhere_Check, "Fund_Level2_GoWhere", "t1");

                    //command = command + _self.processSql(_self.Fund_Section_Overview_text, _self.Fund_Section_Overview_Check, "Fund_Section_Overview", "t1");

                    //command = command + _self.processSql(_self.Conception_text, _self.Conception_Check, "Conception", "t2");

                    //if (_self.Basic_Institute_Ratings_Check.length > 0) {
                    //    var sqltemp1 = "and t1.Basic_Institute_Ratings REGEXP '";
                    //    var temp1 = "";
                    //    _self.Basic_Institute_Ratings_Check.forEach(function (item, index) {

                    //        temp1 = temp1 + ".*" + item + ".*|";
                    //    });
                    //    temp1 = temp1.substring(0, temp1.length - 1)
                    //    command = command + sqltemp1 + temp1 + "' \n";
                    //}


                    //if (_self.Fund_MainForceControl_Check.length > 0) {
                    //    var sqltemp1 = "and t1.Fund_MainForceControl REGEXP '";
                    //    var temp1 = "";
                    //    _self.Fund_MainForceControl_Check.forEach(function (item, index) {

                    //        temp1 = temp1 + ".*" + item + ".*|";
                    //    });
                    //    temp1 = temp1.substring(0, temp1.length - 1)
                    //    command = command + sqltemp1 + temp1 + "' \n";
                    //}


                    //var Section_ThisStock_5DayUp_str = "and t1.Section_ThisStock_5DayUp " + _self.Section_ThisStock_5DayUp.split(',')[0] + "\n" + "and t1.Section_ThisStock_5DayUp " + _self.Section_ThisStock_5DayUp.split(',')[1] + "\n";
                    //command = command + Section_ThisStock_5DayUp_str;

                    //var Section_ThisStock_1DayUp_str = "and t1.Section_ThisStock_1DayUp " + _self.Section_ThisStock_1DayUp.split(',')[0] + "\n" + "and t1.Section_ThisStock_1DayUp " + _self.Section_ThisStock_1DayUp.split(',')[1] + "\n";
                    //command = command + Section_ThisStock_1DayUp_str;

                    //var Section_Section_Rank_str = "and t1.Section_Section_Rank " + _self.Section_Section_Rank.split(',')[0] + "\n" + "and t1.Section_Section_Rank " + _self.Section_Section_Rank.split(',')[1] + "\n";
                    //command = command + Section_Section_Rank_str;




                    //var Whole_BeatHowMany_str = "and t1.Whole_BeatHowMany " + _self.Whole_BeatHowMany.split(',')[0] + "\n" + "and t1.Whole_BeatHowMany " + _self.Whole_BeatHowMany.split(',')[1] + "\n";
                    //command = command + Whole_BeatHowMany_str;

                    //var Tec_BeatHowMany_str = "and t1.Tec_BeatHowMany " + _self.Tec_BeatHowMany.split(',')[0] + "\n" + "and t1.Tec_BeatHowMany " + _self.Tec_BeatHowMany.split(',')[1] + "\n";
                    //command = command + Tec_BeatHowMany_str;

                    //var Fund_BeatHowMany_str = "and t1.Fund_BeatHowMany " + _self.Fund_BeatHowMany.split(',')[0] + "\n" + "and t1.Fund_BeatHowMany " + _self.Fund_BeatHowMany.split(',')[1] + "\n";
                    //command = command + Fund_BeatHowMany_str;

                    //var Message_BeatHowMany_str = "and t1.Message_BeatHowMany " + _self.Message_BeatHowMany.split(',')[0] + "\n" + "and t1.Message_BeatHowMany " + _self.Message_BeatHowMany.split(',')[1] + "\n";
                    //command = command + Message_BeatHowMany_str;

                    //var Section_BeatHowMany_str = "and t1.Section_BeatHowMany " + _self.Section_BeatHowMany.split(',')[0] + "\n" + "and t1.Section_BeatHowMany " + _self.Section_BeatHowMany.split(',')[1] + "\n";
                    //command = command + Section_BeatHowMany_str;

                    //var Basic_BeatHowMany_str = "and t1.Basic_BeatHowMany " + _self.Basic_BeatHowMany.split(',')[0] + "\n" + "and t1.Basic_BeatHowMany " + _self.Basic_BeatHowMany.split(',')[1] + "\n";
                    //command = command + Basic_BeatHowMany_str;



                    //_self.SQLdisplay = _self.sqlTemp.replace(/command/g, command);

                },
                processSql(v_text, v_Check, v,table) {
                    var final = "";
                    if (v_text == '') {
                        v_Check.forEach(function (item, index) {
                            var temp = "and " + table+"."+v+" REGEXP   '.*" + item + ".*' \n";
                            final = final + temp;
                        });
                    } else {
                        var and = [];
                        if (v_text.indexOf("&") != -1) {
                            and = v_text.split("-")[0].split("&");
                        } else {
                            var temp = v_text.split("-")[0];
                            if (temp != '') {
                                and.push(temp);
                            }

                        }

                        and.forEach(function (item, index) {
                            var temp = "and " + table + "." +v+" REGEXP   '.*" + item + ".*' \n";
                            final = final + temp;
                        });

                        var or = [];
                        if (v_text.indexOf("|") != -1) {
                            or = v_text.split("-")[1].split("|");
                        } else {
                            var temp = v_text.split("-")[1];
                            if (temp != '') {
                                or.push(temp);
                            }
                        }
                        if (or.length > 0) {
                            var sqltemp1 = "and " + table + "." +  v +" REGEXP '";
                            var temp1 = "";
                            or.forEach(function (item, index) {
                                temp1 = temp1 + ".*" + item + ".*|";
                            });
                            temp1 = temp1.substring(0, temp1.length - 1)
                            final = final + sqltemp1 + temp1 + "' \n";
                        }
                    }
                    return final;
                },
                clickMe(id) {
                    var _self = this;
                    _self.GetImage(id);
                    _self.DicList.forEach(function (item, index) {
                        if (item.DictId == id) {
                            _self.Id = item.DictId;
                            _self.DictName = item.DictName;
                            _self.DictType = item.DictType;
                            _self.Remark = item.Remark;
                            _self.SQLdisplay = item.SQL;

                            _self.Strategy = _self.Id;
                        }
                    });

                    _self.GetSiftParaDataList();


                },
                checkAll: function () {
                    var _self = this;
                    _self.DicList.forEach(function (item, index) {
                        if (_self.checkedNames.indexOf(item.DictId) < 0) {
                            _self.checkedNames.push(item.DictId);
                        }
                    });
                },
                RemoveAll: function () {
                    var _self = this;
                    _self.checkedNames = [];
                    _self.Strategy = '';

                },

                checkAllSection: function () {
                    var _self = this;
                    _self.SectionList.forEach(function (item, index) {
                        if (_self.CheckSectionList.indexOf(item) < 0) {
                            _self.CheckSectionList.push(item);
                        }
                    });
                },
                RemoveAllSection: function () {
                    var _self = this;
                    _self.CheckSectionList = [];

                },
                GetCount: function(section) {
                    var _self = this;
                    var res="REF"
                    _self.SectionList.forEach(function (item, index) {
                        if (item.indexOf(section)!=-1) {
                            res = item.split('-')[1];
                        }
                    });
                    return res;
                },
                GetDicList: function () {
                    var _self = this;
                   var data = {
                        dictType: "1",
                    };
                    yui.$axiospostform('/Dict/GetDicList', data).then(function (response) {
                        _self.DicList = response.data;

                        _self.DicList.sort(
                            (function (a, b) {
                                res = Number(a.DictName.split('-')[0]) - Number(b.DictName.split('-')[0]);
                                return res;
                            })
                        );

                    }).catch(function (error) {
                        console.info(error);
                    });
                },

                GetProcedure: function () {
                    var _self = this;
                    yui.$axiospost('/Fund/GetProcedure', null).then(function (response) {
                        _self.procedurelist = response.data;

                    }).catch(function (error) {
                        console.info(error);
                    });
                },

                GetSiftParaDataList: function () {
                    var _self = this;

                    var data = {
                        StrategyId: _self.Strategy,
                        StockOrFund:"stock"

                    };
                    yui.$axiospostform('/SelfSelect/GetSiftParaData', data).then(function (response) {
                        console.log(response.data);
                        _self.SiftParaDataList =[];
                        response.data.forEach(function (item, index) {
                            if (item.StrategyId == 9999 || item.StrategyId == 0) {
                                _self.SiftParaDataList.push(item);
                            }
                        });
                        _self.SiftParaDataListForThis = [];
                        response.data.forEach(function (item, index) {
                            if (item.StrategyId == _self.Strategy) {
                                _self.SiftParaDataListForThis.push(item);
                            }
                        });


                    }).catch(function (error) {
                        console.info(error);
                    });
                },

               AddParaSifter: function () {
                   var _self = this;
                    var index = layer.load(1, {
                        shade: [0.1, '#fff'] //0.1透明度的白色背景
                    });
                   var data = {
                       siftParaData: _self.filter2,
                       StrategyId: _self.Strategy,
                       StockOrFund:"stock"
                    };
                    yui.$axiospostform('/SelfSelect/AddSiftParaData', data)
                        .then(function (response) {
                            if (response.data.Item1 === 101) {
                                layer.tips(response.data.Item2, '.layui-layer-setwin', {
                                    tips: [1, '#3595CC'],
                                    time: 3000
                                });
                                layer.close(index);
                                return false;
                            }
                            if (response.data.Item1) {
                                layer.msg(response.data.Item2, { icon: 1, time: 1000 });
                                setTimeout(function () {
                                    yui.layer_close3();
                                }, 500);
                            } else {
                                layer.msg(response.data.Item2 || errorMsg, { icon: 5 });
                            }
                            layer.close(index);
                            _self.GetSiftParaDataList();
                        })
                        .catch(function (error) {
                            layer.close(index);
                        });
                },

                    DeleteParaSifter: function () {
                   var _self = this;
                    var index = layer.load(1, {
                        shade: [0.1, '#fff'] //0.1透明度的白色背景
                    });
                   var data = {
                       siftParaData: _self.filter2,
                       StrategyId: _self.Strategy
                    };
                    yui.$axiospostform('/SelfSelect/DeleteSiftParaData', data)
                        .then(function (response) {
                               if (response.data.Item1 === 101) {
                                layer.tips(response.data.Item2, '.layui-layer-setwin', {
                                    tips: [1, '#3595CC'],
                                    time: 3000
                                });
                                layer.close(index);
                                return false;
                            }
                            if (response.data.Item1) {
                                layer.msg(response.data.Item2, { icon: 1, time: 1000 });
                                setTimeout(function () {
                                    yui.layer_close3();
                                }, 500);
                            } else {
                                layer.msg(response.data.Item2 || errorMsg, { icon: 5 });
                            }
                            layer.close(index);
                            _self.GetSiftParaDataList();

                        })
                        .catch(function (error) {
                            layer.close(index);
                        });
                },

               ShowLatest: function (stock, date, stockName) {
                    var _self = this;
                    var recommenddate = _self.jsonDateFormat(date);
                    yui.layershow(stockName, "/Stock/LatestInfoView?StockNumber=" + stock + "&Date=" + recommenddate, _self.width * 0.8, _self.height * 0.8);
                },
                Modify: function (stockNumber) {
                    var _self = this;
                    var data = {
                        stockNumber: stockNumber,
                    };
                    yui.$axiospostform('/SelfSelect/GetSelfSelectId', data).then(function (response) {
                        var SelfSelectId = response.data.replace('A','');
                        var index = layer.confirm("您确定要修改吗？", { btn: ["确定", "取消"] }, function () {
                            layer.close(index);
                            var id = SelfSelectId;
                            yui.layershow("修改自选", "/SelfSelect/AddManual?id=" + id, _self.width * 0.8, _self.height * 0.8);
                        }, function () {
                        });
                    }).catch(function (error) {
                        console.info(error);
                    });


                },
                Emphasis: function (content) {
                    var _self = this;
                    var array = ['####','周线'];
                    var res = content;
                    array.forEach(function (item, index, currentArray) {
                        //var temp = _self.jsonDateFormat(item.Date).split(' ')[0].split('-')[2];
                        //_self.DateList.push(temp);
                        if (content.indexOf(item) >= 0) {
                            var reg = new RegExp(item, "g");//g,表示全部替换。
                            if (item == '周线') {
                                res = res.replace(reg, '<span style="color:red;font-weight:bold">' + item + '</span>');
                            } else {
                                res = res.replace(reg, '<span style="color:blue;font-weight:bold">' + item + '</span>');
                            }
                            //res = res.replace(reg, '【' + item + '】');g
                        }



                    });
                    return res;
                },

                GetRealTimePrice: function (TradePlace,StockNumber) {
                    var _self = this;
                    var res = "unknown";
                    yui.$axiosget('/SinaApi?code=' + TradePlace + StockNumber)
                        .then(function (response) {
                            var arr = response.data.split(',')[3];
                            //console.log(arr);
                            res = arr;
                        })
                        .catch(function (error) {
                        });

                    return res;
                },

                GetDateList: function () {
                    var _self = this;
                    yui.$axiospost('/Stock/DateList', null).then(function (response) {
                        var thisdate= response.data;
                        thisdate.forEach(function (item, index, currentArray) {
                            var temp = _self.jsonDateFormat(item.Date).split(' ')[0].split('-')[2];
                            _self.DateList.push(temp);
                        });
                    }).catch(function (error) {
                        console.info(error);
                    });
                },
                EnableEdit: function () {
                    var _self = this;
                    if (_self.flag) {
                        $(".mytext").attr("readonly", true);
                        _self.flag = false;
                    }else{
                        $(".mytext").attr("readonly", false);
                        _self.flag = true;
                    }
                },
                SaveAsStrategy: function () {
                    var _self = this;
                    layer.prompt({ title: '策略名称', formType: 2 }, function (text, index) {
                        var data = {
                            id: "",
                            DictName: text,
                            DictType: "1",
                            Remark: _self.Remark,
                            SQL: _self.SQLdisplay,
                            PreId: _self.Id
                        };
                        yui.$axiospostform('/Dict/AddOrUpdate', data)
                            .then(function (response) {
                                if (response.data.Item1 === 101) {
                                    layer.tips(response.data.Item2, '.layui-layer-setwin', {
                                        tips: [1, '#3595CC'],
                                        time: 3000
                                    });
                                    layer.close(index);
                                    return false;
                                }
                                if (response.data.Item1) {
                                    _self.GetDicList();
                                    $(".mytext").attr("readonly", true);
                                    layer.msg(response.data.Item2, { icon: 1, time: 1000 });
                                    setTimeout(function () {
                                        yui.layer_close3();
                                    }, 500);
                                } else {
                                    layer.msg(response.data.Item2 || errorMsg, { icon: 5 });
                                }
                            })
                            .catch(function (error) {
                                layer.msg('策略保存失败！');
                            });
                        layer.close(index);
                        layer.msg('策略保存成功！');
                    });
                },
                SaveStrategy: function () {
                    var _self = this;
                    var data = {
                        id: _self.Id,
                        DictName: _self.DictName,
                        DictType: _self.DictType,
                        Remark: _self.Remark,
                        SQL: _self.SQLdisplay
                    };
                    yui.$axiospostform('/Dict/AddOrUpdate', data)
                        .then(function (response) {
                            if (response.data.Item1 === 101) {
                                layer.tips(response.data.Item2, '.layui-layer-setwin', {
                                    tips: [1, '#3595CC'],
                                    time: 3000
                                });
                                layer.close(index);
                                return false;
                            }
                            if (response.data.Item1) {
                                _self.GetDicList();
                                $(".mytext").attr("readonly", true);
                                layer.msg(response.data.Item2, { icon: 1, time: 1000 });
                                setTimeout(function () {
                                    yui.layer_close3();
                                }, 500);
                            } else {
                                layer.msg(response.data.Item2 || errorMsg, { icon: 5 });
                            }
                        })
                        .catch(function (error) {

                        });
                },
                searchL: function (sql) {
                    var _self = this;
                    if (sql != '') {
                        sqlExe = sql;
                    } else {
                        sqlExe = _self.SQLdisplay;
                    }

                    var data = {
                        datemin: _self.$refs.datemin.value,
                        datemax: _self.$refs.datemax.value,
                        DateWantSee: _self.$refs.DateWantSee.value,
                        StrategyId: _self.Strategy,
                        StrategyIdList: _self.checkedNames,
                        InOrAfterTrade: _self.InOrAfterTrade,
                        Section: _self.Section,
                        CheckSectionList: _self.CheckSectionList,
                        sql: sqlExe,
                    };
                    $("#Indicator").css({ "background": "#f39c12" });
                    yui.$axiospostform('/Stock/GetDataBySql', data).then(function (response) {
                        _self.stockList = response.data.list;
                        _self.sql = response.data.sql;
                        //把中期趋势
                         //console.log(_self.stockList);
                        _self.getTrend(_self.stockList);
                        _self.filterStockList = _self.stockList;
                        _self.serverNumber = _self.stockList.length;
                        _self.TotalCount = _self.filterStockList.length;
                        console.log(_self.stockList);
                        if (_self.sql.indexOf("错误") != -1) {
                            layer.msg("SQL错误" || errorMsg, { icon: 5 });
                            $("#Indicator").css({ "background": "red" });

                        } else {
                            layer.msg("搜索完成", { icon: 1, time: 1000 });
                            $("#Indicator").css({ "background": "#7bd4d4" });
                        }

                    }).catch(function (error) {
                        console.info(error);
                    });
                },
                getTrend: function (stockList) {
                    var _self = this;
                    _self.Whole_MiddleTrend = [];
                    _self.Whole_ShortTrend = [];
                    stockList.forEach(function (item, index) {
                        if (_self.Whole_MiddleTrend.indexOf(item.Whole_MiddleTrend) == -1) {
                            _self.Whole_MiddleTrend.push(item.Whole_MiddleTrend);
                        }
                        if (_self.Whole_ShortTrend.indexOf(item.Whole_ShortTrend) == -1) {
                            _self.Whole_ShortTrend.push(item.Whole_ShortTrend);
                        }


                    });
                },
               getImgUrl: function (place, number, lenth,scale) {
                    var flag="0."
                    if (place == 'sz') {
                        flag = "0.";
                    } else {
                        flag = "1.";
                    }
                    var url="http://webquoteklinepic.eastmoney.com/GetPic.aspx?nid="+flag+number+"&UnitWidth="+scale+"&imageType=KXL&EF=&Formula=RSI&AT=1&&type="+lenth;
                    return url;
                },
                getWeekImgUrl: function (place, number, lenth) {
                    var url = "http://image.sinajs.cn/newchart/weekly/n/" + place + number + ".gif";
                    return url;
                },
                getMonthImgUrl: function (place, number, lenth) {
                    var url = "http://image.sinajs.cn/newchart/monthly/n/" + place + number + ".gif";
                    return url;
                },
                getMinImgUrl: function (place, number, lenth) {
                    var url = "http://image.sinajs.cn/newchart/min/n/" + place + number + ".gif";
                    return url;
                },
                getWencai: function (place, number, lenth) {
                    var url = "http://www.iwencai.com/stockpick/search?w=" + number + "#right_nav_62";
                    return url;
                },
                 getTecPara: function (place, number, lenth) {
                     var url = "http://www.iwencai.com/stockpick/search?typed=1&preParams=&ts=1&f=1&qs=index_rewrite&selfsectsn=&querytype=&searchfilter=&tid=stockpick&w=" + number + " 选股新动向";
                    return url;
                },
                     getTecParaJson: function (place, number, lenth) {
                     var url = "http://www.iwencai.com/diag/block-detail?pid=11295&codes="+number+"&codeType=stock&info=%7b%22view%22%3a%7b%22nolazy%22%3a1%2c%22parseArr%22%3a%7b%22_v%22%3a%22new%22%2c%22staying%22%3a%5b%5d%2c%22queryCompare%22%3a%5b%5d%2c%22comparesOfIndex%22%3a%5b%5d%7d%2c%22asyncParams%22%3a%7b%22tid%22%3a9271%7d%7d%7d";
                    return url;
                },
                getTecParaHistory: function (place, number, lenth) {
                    var url = "/Stock/QueryInfoTecPara?StockNumber=" + number;
                    return url;
                },
                  getTrendHistory: function (place, number, lenth) {
                    var url = "/Stock/QueryInfo?StockNumber=" + number;
                    return url;
                },
                getStockUrl: function (place, number, lenth) {
                    var url = "https://finance.sina.com.cn/realstock/company/" + place + number + "/nc.shtml";
                    return url;
                },

                //item.StockNumber, item.StockName, item.TradePlace, item.Date

            //< span > 整体：< br /> {{ item.Whole_BeatHowMany }}</span >
            //<span>技术：<br />{{ item.Tec_BeatHowMany }}</span>
            //<span>资金：<br />{{ item.Fund_BeatHowMany }}</span>
            //<span>消息：<br />{{ item.Message_BeatHowMany }}</span>
            //<span>行业：<br />{{ item.Section_BeatHowMany }}</span>
            //<span>基本：<br />{{ item.Basic_BeatHowMany }}</span>
                Show: function (StockNumber, StockName, TradePlace, Date, Whole_BeatHowMany, Tec_BeatHowMany, Fund_BeatHowMany, Message_BeatHowMany, Section_BeatHowMany, Basic_BeatHowMany) {
                    var _self = this;
                    var recommenddate = _self.jsonDateFormat(Date);
                    yui.$axiosget('/SelfSelect/AskIfAddedToday?StockNumber=' + StockNumber)
                        .then(function (response) {
                            if (response.data.Item1) {
                                var index = layer.confirm(response.data.Item2+"。确认新增修改?", { btn: ["确认", "取消"] }, function () {
                                    layer.close(index);
                                    yui.layershow("添加自选", "/SelfSelect/Add?IsStock=1&StockNumber=" + StockNumber + "&StockName=" + StockName +"&TradePlace=" + TradePlace + "&Date=" + recommenddate + "&Whole_BeatHowMany=" + Whole_BeatHowMany + "&Tec_BeatHowMany=" + Tec_BeatHowMany + "&Fund_BeatHowMany=" + Fund_BeatHowMany + "&Message_BeatHowMany=" + Message_BeatHowMany + "&Section_BeatHowMany=" + Section_BeatHowMany + "&Basic_BeatHowMany=" + Basic_BeatHowMany, _self.width * 0.8, _self.height * 0.8);
                                }, function () {
                                });

                            } else {
                                yui.layershow("添加自选", "/SelfSelect/Add?IsStock=1&StockNumber=" + StockNumber + "&StockName=" + StockName + "&TradePlace=" + TradePlace + "&Date=" + recommenddate + "&Whole_BeatHowMany=" + Whole_BeatHowMany + "&Tec_BeatHowMany=" + Tec_BeatHowMany + "&Fund_BeatHowMany=" + Fund_BeatHowMany + "&Message_BeatHowMany=" + Message_BeatHowMany + "&Section_BeatHowMany=" + Section_BeatHowMany + "&Basic_BeatHowMany=" + Basic_BeatHowMany, _self.width * 0.8, _self.height * 0.8);
                            }
                        })
                        .catch(function (error) {
                            layer.msg(error.message, { icon: 5 });
                        });
                },
                deleteL: function () {
                    var _self = this;
                    var arr = $("#bootstraptable").bootstrapTable('getSelections');
                    if (arr.length > 0) {
                        var index = layer.confirm("您确定要删除吗？", { btn: ["确定", "取消"] }, function () {
                            var id = arr[0].DeptId;
                            yui.$axiosget('/Dept/Delete?id=' + id)
                                .then(function (response) {
                                    if (response.data.Item1) {
                                        layer.msg(response.data.Item2 || errorMsg, { icon: 1 });
                                        //_self.searchL();
                                    } else {
                                        layer.msg(response.data.Item2 || errorMsg, { icon: 5 });
                                    }
                                })
                                .catch(function (error) {
                                    layer.msg(error.message, { icon: 5 });
                                });
                            layer.close(index);
                        });
                    } else {
                        layer.alert("请选中行", { icoon: 3, skin: "layer-ext-moon" });
                    }
                },
                deleteOperation: function () {
                    var _self = this;
                    var index = layer.confirm("您确定要删除该策略吗？", { btn: ["确定", "取消"] }, function () {
                        var data = {
                            StrategyIdList: _self.checkedNames,
                        };
                        yui.$axiospostform('/Dict/DeleteSelectStrategy', data).then(function (response) {
                            if (response.data.Item1) {
                                layer.msg(response.data.Item2 || errorMsg, { icon: 1 });
                                _self.GetDicList();
                            } else {
                                layer.msg(response.data.Item2 || errorMsg, { icon: 5 });
                            }

                        }).catch(function (error) {
                            console.info(error);
                        });
                    });
                }
            }
        });
    </script>
}

